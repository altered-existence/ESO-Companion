@inherits LayoutComponentBase
@using ESOCompanion
@using ESOCompanion.Data
@using DataAccessLibrary.Services
@using DataAccessLibrary.SQLite
@using DataAccessLibrary.Models
@inject ISQLiteDataAccess companionDB
@inject AccountManager accounts
@inject ICharacterData characterData
@inject IStyleData styleData
@inject IUserData userData
@inject AppData appData
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="sidebar">
    <NavMenu />
</div>

<div class="main">
    <div class="border-top-0 px-3">
        <AuthorizeView>
            <Authorized>
                <a href="/accountPage" @onclick="(() => Logout())">Logout</a>
            </Authorized>
            <NotAuthorized>
                <a href="/accountPage">Login</a>
            </NotAuthorized>
        </AuthorizeView>
    </div>

    <div class="content px-4">

        @if (AppData.role == "Noob")
        {
            <p>@_name</p>
        }
        @Body
    </div>
    <Footer />
</div>

@code {

    string _name;
    static string path;
    static string fileName;
    UserModel user = new UserModel();
    public List<UserModel> users;
    DataFileModel dataFile = new DataFileModel(path, fileName);

    protected override async Task OnInitializedAsync()
    {
        appData.DataFile = dataFile;
        path = AppData.definedDatabasePath;
        fileName = AppData.userDatabaseFile;
        //await appData.CheckForFirstTimeUse();
        if (appData.CheckForFirstTimeUse().IsCompletedSuccessfully)
        {
            //users = await userData.GetUsers();
        }
        CheckLoadedUser();
    }
    public void Logout()
    {
        AppData.UnloadUser();
    }
    public void CheckLoadedUser()
    {
        if (AppData.loadedUser != null)
        {
            if (accounts.isRegistered(AppData.loadedUser.emailAddress))
            {
                _name = AppData.loadedUser.userName;
            }
        }
    }
}