@page "/characterListPage"
@using DataAccessLibrary.SQLite
@using DataAccessLibrary.Models
@inject ICharacterData _db

@inject IUserData userData

@if (characters == null)
{
    <h1 class="text-center">LOADING...</h1>
}
else
{
    <h1 class="text-center">Character List</h1>
    <div class="container-fluid">
        <table class="table table-responsive table-hover table-striped table-bordered table-dark">
            <thead>
                <tr>
                    <th><a href="addCharacterPage" class="oi oi-plus">Add New</a></th>
                    <th>ID</th>
                    <th>Character</th>
                    <th>Level</th>
                    <th>Race</th>
                    <th>Class</th>
                    <th>Save File</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var character in characters)
                {
                    <tr>
                        <td></td>
                        <td>@character.ID</td>
                        <td>@character.charName</td>
                        <td>@character.charLevel</td>
                        <td>@character.charRace</td>
                        <td>@character.charClass</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="container align-self-auto" style="padding-bottom:4em">
        <button class="btn btn-danger" style="padding:2px" @onclick="UpdateCharacterEntries">Update Characters</button>
    </div>
}

@code {
    public List<CharacterModel> characters;
    protected override async Task OnInitializedAsync()
    {
        characters = await _db.GetCharacters();
    }
    private async Task UpdateCharacterEntries()
    {
        foreach (var character in characters)
        {
            await _db.UpdateCharacterEntry(character);
        }
    }
}