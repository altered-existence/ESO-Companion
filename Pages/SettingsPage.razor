@page "/settingsPage"
@using ESOCompanion.Data

@using DataAccessLibrary.SQLite

@inject ISQLiteDataAccess companionDB
@inject IUserData userData
@inject ICharacterData characterData
@inject IStyleData styleData
<h1 class="text-center"><img class="float-left" src="img/icon.png" width="64" height="64">Settings</h1>

<div class="container col-10">
    <div class="form-group">
        <form>
            <label class="form-label" for="toggleTheme">Toggle Theme:</label>
            <input type="checkbox" class="form-control-file" id="toggleTheme">

            <label class="form-label" for="databaseFile">Select Database File</label>
            <input type="file" class="form-control-file" id="databaseFile">

            <label class="form-label" for="addonsFolder">Select AddOns Folder</label>
            <input type="file" class="form-control-file" id="addonsFolder">

            <AuthorizeView>
                <Authorized>
                    @if (AppData.role == "Admin")
                    {
                        <div class="container align-self-auto" style="padding-bottom:4em">
                            <button class="btn btn-danger" style="padding:2px" @onclick="CleanDatabase">Clean Database</button>
                        </div>

                        <div class="container align-self-auto" style="padding-bottom:4em">
                            <button class="btn btn-danger" style="padding:2px" @onclick="CleanUserTable">Purge Users</button>
                        </div>
                    }
                    else if (AppData.role == null)
                    {
                        <div class="container align-self-auto" style="padding-bottom:4em">
                            <button class="btn btn-danger" style="padding:2px" @onclick="CreateNewDatabase">Create New Database</button>
                        </div>
                    }
                </Authorized>
                <NotAuthorized>

                </NotAuthorized>
            </AuthorizeView>
        </form>
    </div>
</div>

@code {

    public void onDatabaseFileSelect(string databaseFilePath)
    {
        companionDB.connectionString = databaseFilePath;
    }
    public void onAddonsFolderSelect(string addonsPath)
    {

    }
    private void CreateNewDatabase()
    {
        companionDB.CreateDatabaseAndTable(companionDB.connectionString);
    }
    private void CleanDatabase()
    {

        characterData.ClearTable();
        styleData.ClearTable();
        characterData.CreateCharactersTable();
        styleData.CreateStylesTable();
    }
    public void CleanUserTable()
    {
        userData.ClearTable();
        userData.CreateUsersTable();
    }
}